public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    
    Cluster c = Cluster.builder().addContactPoint("localhost").build();
        Session s = c.connect();
         s.execute("use pro;");
         ResultSet rs=s.execute("select id,num_href,is_weekend,shares from data_table");
         ResultSet rs2=s.execute("SELECT popularity from data_table");
    
    
    
	      p=-1;
	      
		     q=-1;
         
         //int arr4[]=new int[1600];
                       r=-1;
                       saaa=-1;
	     rs.forEach(
	    		 (Row row) -> {
	    	                 arr3[++r]=row.getInt("id");
	    			 arr[++q]=row.getInt("shares"); 
	    	 
	    			 arr2[++p]=row.getInt("num_href"); 
                                 arr4[++saaa]=row.getInt("is_weekend");
				
	     });
   
    int i, m1, m2, a, b, n = 0;
    int flag=0;
    float sum1, sum2;
    a = ED(arr[0],arr2[0]);
    b = ED(arr[1],arr2[1]);
    m1 = a;
    m2 = b;
   
    
    
    do {
        sum1 = 0;
        sum2 = 0;
        cluster1 = new int[arr.length];
        cluster2 = new int[arr.length];
        n++;
        int k = 0, j = 0;
        
        for (i = 0; i < arr.length; i++) {
            if (m1<ED(arr[i],arr2[i])) {
                cluster1[k] = ED(arr[i],arr2[i]);
                cluster11[k] = arr3[i];
                k++;
            } else {
                cluster2[j] = ED(arr[i],arr2[i]);
                cluster22[j] = arr3[i];
                 //System.out.println("fhfb"+cluster22[j]);
                j++;
            }
        }
        System.out.println();
        for (i = 0; i < k; i++) {
            sum1 = sum1 + cluster1[i];
        }
        for (i = 0; i < j; i++) {
            sum2 = sum2 + cluster2[i];
        }
        //printing Centroids/Means\
        System.out.println("m1=" + m1 + "   m2=" + m2);
        a = m1;
        b = m2;
        m1 = Math.round(sum1 / k);
        m2 = Math.round(sum2 / j);
        //flag = !(m1 == a && m2 == b);
        flag++;
        System.out.println("After iteration " + n + " , cluster 1 :\n");    //printing the clusters of each iteration
        for (i = 0; i < cluster1.length; i++) {
            System.out.print(cluster1[i] + "\t");
        }

        System.out.println("\n");
        System.out.println("After iteration " + n + " , cluster 2 :\n");
        for (i = 0; i < cluster2.length; i++) {
            System.out.print(cluster2[i] + "\t");
        }

    } while (flag!=2);
  System.out.println();
    System.out.println("Final cluster 1 :\n");            // final clusters
    for (i = 0; i < cluster1.length; i++) {
        System.out.print(cluster1[i] + "\t");
    }
    

    System.out.println();
    System.out.println("Final cluster 2 :\n");
    for (i = 0; i < cluster2.length; i++) {
        System.out.print(cluster2[i] + "\t");
    }
    
    System.out.println();
    System.out.println("Cluster ids in 1st :\n");
    for (i = 0; i < cluster11.length; i++) {
        if(cluster11[i]!=0)
            count1++;
        System.out.print(cluster11[i] + "\t");
    }
     System.out.println();
    System.out.println("Cluster ids in 2nd :\n");
    for (i = 0; i < cluster22.length; i++) {
        if(cluster22[i]!=0)
            count2++;
        System.out.print(cluster22[i] + "\t");
    }
    System.out.println();
    //System.out.println("count1 is"+count1+"count 2 is"+count2);
    System.out.println();
    int res1,res2;
    //res1 = Kmeans.search_cluster1(2100);
    //res2=Kmeans.search_cluster2(2100);
    //System.out.println("Res1 is"+res1+"\nRes2 is"+res2);

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui().setVisible(true);
            }
        });
    }
